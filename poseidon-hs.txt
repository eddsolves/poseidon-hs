-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A package with tools for working with Poseidon Genotype Data
--   
--   The tools in this package read and analyse Poseidon-formatted genotype
--   databases, a modular system for storing genotype data from thousands
--   of individuals.
@package poseidon-hs
@version 1.2.3.1

module Poseidon.MathHelpers

-- | A helper function to calculate the mean of a list of doubles
avg :: [Double] -> Double

-- | A helper function to round doubles
roundTo :: Int -> Double -> Double

-- | A helper function to print rounded doubles
roundToStr :: (PrintfArg a, Floating a) => Int -> a -> String

-- | A helper function to calculate the standard deviation of a list of
--   doubles
stdev :: [Double] -> Double

-- | A helper function to get a nice string with mean and sd for a list of
--   doubles
meanAndSdRoundTo :: Int -> [Double] -> String

-- | A helper function to get a nice string with mean and sd for a list of
--   doubles (here rounded to integer)
meanAndSdInteger :: [Double] -> String

module Poseidon.PoseidonVersion
validPoseidonVersions :: [PoseidonVersion]
showPoseidonVersion :: PoseidonVersion -> String
latestPoseidonVersion :: PoseidonVersion
asVersion :: PoseidonVersion -> Version
minimalRequiredClientVersion :: Version
instance GHC.Classes.Ord Poseidon.PoseidonVersion.PoseidonVersion
instance GHC.Classes.Eq Poseidon.PoseidonVersion.PoseidonVersion
instance GHC.Show.Show Poseidon.PoseidonVersion.PoseidonVersion

module Poseidon.Utils

-- | A Poseidon Exception data type with several concrete constructors
data PoseidonException

-- | An exception to represent YAML parsing errors
PoseidonYamlParseException :: FilePath -> ParseException -> PoseidonException

-- | An exception to represent a logical error in a package
PoseidonPackageException :: String -> PoseidonException

-- | An exception to represent an issue with a package version
PoseidonPackageVersionException :: FilePath -> String -> PoseidonException

-- | An exception to indicate a missing poseidonVersion field
PoseidonPackageMissingVersionException :: FilePath -> PoseidonException

-- | An exception to represent an error when searching for individuals or
--   populations
PoseidonIndSearchException :: String -> PoseidonException

-- | An exception to represent errors in the genotype data
PoseidonGenotypeException :: String -> PoseidonException

-- | An exception to represent errors in the genotype data forwarded from
--   the sequence-formats library
PoseidonGenotypeExceptionForward :: SomeException -> PoseidonException

-- | An exception to represent errors in the remote data loading forwarded
--   from simpleHttp
PoseidonHttpExceptionForward :: HttpException -> PoseidonException

-- | An exception to represent errors when trying to parse the janno or
--   seqSource file
PoseidonFileRowException :: FilePath -> Int -> String -> PoseidonException

-- | An exception to represent consistency errors in janno or seqSource
--   files
PoseidonFileConsistencyException :: FilePath -> String -> PoseidonException

-- | An exception to represent inconsistencies across multiple files in a
--   package
PoseidonCrossFileConsistencyException :: String -> String -> PoseidonException

-- | An exception to represent logical issues in a poseidon package
--   Collection
PoseidonCollectionException :: String -> PoseidonException

-- | An exception to represent missing files
PoseidonFileExistenceException :: FilePath -> PoseidonException

-- | An exception to represent failed checksum tests
PoseidonFileChecksumException :: FilePath -> PoseidonException

-- | An exception type to represent FStat specification errors
PoseidonFStatsFormatException :: String -> PoseidonException

-- | An exception to represent errors when trying to parse the .bib file
PoseidonBibTeXException :: FilePath -> String -> PoseidonException

-- | An exception to indicate failed entity parsing
PoseidonPoseidonEntityParsingException :: String -> PoseidonException

-- | An exception to indicate issues in the forge selection
PoseidonForgeEntitiesException :: String -> PoseidonException

-- | An exception to throw if there is nothing to be forged
PoseidonEmptyForgeException :: PoseidonException

-- | An exception to indicate an issue in newPackageTemplate
PoseidonNewPackageConstructionException :: String -> PoseidonException

-- | An exception to indicate failed remote info JSON parsing
PoseidonRemoteJSONParsingException :: String -> PoseidonException

-- | A catch-all for any other type of exception
PoseidonGenericException :: String -> PoseidonException

-- | An exception to throw if the output package lacks a name
PoseidonEmptyOutPacNameException :: PoseidonException

-- | An exception to throw if genotype data files don't share a common base
--   directory
PoseidonUnequalBaseDirException :: FilePath -> FilePath -> FilePath -> PoseidonException

-- | An exception to mark server communication errors
PoseidonServerCommunicationException :: String -> PoseidonException

-- | An exception for unzipping issues in fetch
PoseidonUnzipException :: SomeException -> PoseidonException

-- | An exception for issues in chronicle
PoseidonChronicleException :: String -> PoseidonException

-- | An exception for issues with git
PoseidonGitException :: FilePath -> PoseidonException
renderPoseidonException :: PoseidonException -> String
usePoseidonLogger :: LogMode -> TestMode -> PlinkPopNameMode -> PoseidonIO a -> IO a
testLog :: PoseidonIO a -> IO a
type PoseidonIO = ReaderT Env IO
envLogAction :: PoseidonIO LogA
envInputPlinkMode :: PoseidonIO PlinkPopNameMode
data LogMode
NoLog :: LogMode
SimpleLog :: LogMode
DefaultLog :: LogMode
ServerLog :: LogMode
VerboseLog :: LogMode
checkFile :: FilePath -> Maybe String -> IO ()
getChecksum :: FilePath -> IO String
logWarning :: String -> PoseidonIO ()
logInfo :: String -> PoseidonIO ()
logDebug :: String -> PoseidonIO ()
logError :: String -> PoseidonIO ()
type LogA = LogAction IO Message
noLog :: LogA
logWithEnv :: MonadIO m => LogA -> PoseidonIO () -> m ()
padRight :: Int -> String -> String
padLeft :: Int -> String -> String
determinePackageOutName :: Maybe String -> FilePath -> IO String
data PlinkPopNameMode
PlinkPopNameAsFamily :: PlinkPopNameMode
PlinkPopNameAsPhenotype :: PlinkPopNameMode
PlinkPopNameAsBoth :: PlinkPopNameMode
data TestMode
Testing :: TestMode
Production :: TestMode
data Env
Env :: LogA -> TestMode -> PlinkPopNameMode -> Env
[_envLogAction] :: Env -> LogA
[_envTestMode] :: Env -> TestMode
[_envInputPlinkMode] :: Env -> PlinkPopNameMode
instance GHC.Show.Show Poseidon.Utils.TestMode
instance GHC.Show.Show Poseidon.Utils.LogMode
instance GHC.Show.Show Poseidon.Utils.PoseidonException
instance GHC.Exception.Type.Exception Poseidon.Utils.PoseidonException

module Poseidon.Janno

-- | A data type to represent a sample/janno file row See
--   <a>https://github.com/poseidon-framework/poseidon2-schema/blob/master/janno_columns.tsv</a>
--   for more details
data JannoRow
JannoRow :: String -> JannoSex -> JannoStringList -> Maybe JannoStringList -> Maybe JannoStringList -> Maybe JannoRelationDegreeList -> Maybe JannoStringList -> Maybe String -> Maybe String -> Maybe String -> Maybe JannoCountry -> Maybe String -> Maybe String -> Maybe Latitude -> Maybe Longitude -> Maybe JannoDateType -> Maybe JannoStringList -> Maybe JannoIntList -> Maybe JannoIntList -> Maybe BCADAge -> Maybe BCADAge -> Maybe BCADAge -> Maybe String -> Maybe String -> Maybe String -> Maybe JannoStringList -> Maybe Int -> Maybe JannoStringList -> Maybe (JannoList JannoCaptureType) -> Maybe JannoUDG -> Maybe JannoLibraryBuilt -> Maybe JannoGenotypePloidy -> Maybe JURI -> Maybe Percent -> Maybe Int -> Maybe Double -> Maybe Percent -> Maybe JannoStringList -> Maybe JannoStringList -> Maybe JannoStringList -> Maybe String -> Maybe (JannoList AccessionID) -> Maybe String -> Maybe JannoStringList -> Maybe String -> Maybe JannoStringList -> CsvNamedRecord -> JannoRow
[jPoseidonID] :: JannoRow -> String
[jGeneticSex] :: JannoRow -> JannoSex
[jGroupName] :: JannoRow -> JannoStringList
[jAlternativeIDs] :: JannoRow -> Maybe JannoStringList
[jRelationTo] :: JannoRow -> Maybe JannoStringList
[jRelationDegree] :: JannoRow -> Maybe JannoRelationDegreeList
[jRelationType] :: JannoRow -> Maybe JannoStringList
[jRelationNote] :: JannoRow -> Maybe String
[jCollectionID] :: JannoRow -> Maybe String
[jCountry] :: JannoRow -> Maybe String
[jCountryISO] :: JannoRow -> Maybe JannoCountry
[jLocation] :: JannoRow -> Maybe String
[jSite] :: JannoRow -> Maybe String
[jLatitude] :: JannoRow -> Maybe Latitude
[jLongitude] :: JannoRow -> Maybe Longitude
[jDateType] :: JannoRow -> Maybe JannoDateType
[jDateC14Labnr] :: JannoRow -> Maybe JannoStringList
[jDateC14UncalBP] :: JannoRow -> Maybe JannoIntList
[jDateC14UncalBPErr] :: JannoRow -> Maybe JannoIntList
[jDateBCADStart] :: JannoRow -> Maybe BCADAge
[jDateBCADMedian] :: JannoRow -> Maybe BCADAge
[jDateBCADStop] :: JannoRow -> Maybe BCADAge
[jDateNote] :: JannoRow -> Maybe String
[jMTHaplogroup] :: JannoRow -> Maybe String
[jYHaplogroup] :: JannoRow -> Maybe String
[jSourceTissue] :: JannoRow -> Maybe JannoStringList
[jNrLibraries] :: JannoRow -> Maybe Int
[jLibraryNames] :: JannoRow -> Maybe JannoStringList
[jCaptureType] :: JannoRow -> Maybe (JannoList JannoCaptureType)
[jUDG] :: JannoRow -> Maybe JannoUDG
[jLibraryBuilt] :: JannoRow -> Maybe JannoLibraryBuilt
[jGenotypePloidy] :: JannoRow -> Maybe JannoGenotypePloidy
[jDataPreparationPipelineURL] :: JannoRow -> Maybe JURI
[jEndogenous] :: JannoRow -> Maybe Percent
[jNrSNPs] :: JannoRow -> Maybe Int
[jCoverageOnTargets] :: JannoRow -> Maybe Double
[jDamage] :: JannoRow -> Maybe Percent
[jContamination] :: JannoRow -> Maybe JannoStringList
[jContaminationErr] :: JannoRow -> Maybe JannoStringList
[jContaminationMeas] :: JannoRow -> Maybe JannoStringList
[jContaminationNote] :: JannoRow -> Maybe String
[jGeneticSourceAccessionIDs] :: JannoRow -> Maybe (JannoList AccessionID)
[jPrimaryContact] :: JannoRow -> Maybe String
[jPublication] :: JannoRow -> Maybe JannoStringList
[jComments] :: JannoRow -> Maybe String
[jKeywords] :: JannoRow -> Maybe JannoStringList
[jAdditionalColumns] :: JannoRow -> CsvNamedRecord

-- | A datatype for genetic sex
newtype JannoSex
JannoSex :: Sex -> JannoSex
[sfSex] :: JannoSex -> Sex

-- | A general datatype for janno list columns
newtype JannoList a
JannoList :: [a] -> JannoList a
[getJannoList] :: JannoList a -> [a]
data Sex
Male :: Sex
Female :: Sex
Unknown :: Sex

-- | A datatype for BC-AD ages
newtype BCADAge
BCADAge :: Int -> BCADAge

-- | A datatype for countries in ISO-alpha2 code format
newtype JannoCountry
JannoCountry :: Country -> JannoCountry
makeJannoCountryUnsafe :: String -> JannoCountry

-- | A datatype for Latitudes
newtype Latitude
Latitude :: Double -> Latitude

-- | A datatype for Longitudes
newtype Longitude
Longitude :: Double -> Longitude

-- | A datatype to represent Date_Type in a janno file
data JannoDateType
C14 :: JannoDateType
Contextual :: JannoDateType
Modern :: JannoDateType

-- | A datatype to represent Capture_Type in a janno file
data JannoCaptureType
Shotgun :: JannoCaptureType
A1240K :: JannoCaptureType
ArborComplete :: JannoCaptureType
ArborPrimePlus :: JannoCaptureType
ArborAncestralPlus :: JannoCaptureType
TwistAncientDNA :: JannoCaptureType
OtherCapture :: JannoCaptureType
ReferenceGenome :: JannoCaptureType

-- | A datatype to represent Genotype_Ploidy in a janno file
data JannoGenotypePloidy
Diploid :: JannoGenotypePloidy
Haploid :: JannoGenotypePloidy

-- | A datatype for Percent values
newtype Percent
Percent :: Double -> Percent

-- | A datatype to represent UDG in a janno file
data JannoUDG
Minus :: JannoUDG
Half :: JannoUDG
Plus :: JannoUDG
Mixed :: JannoUDG

-- | A datatype to represent URIs in a janno file
newtype JURI
JURI :: String -> JURI
data RelationDegree
Identical :: RelationDegree
First :: RelationDegree
Second :: RelationDegree
ThirdToFifth :: RelationDegree
SixthToTenth :: RelationDegree
Unrelated :: RelationDegree
OtherDegree :: RelationDegree

-- | A datatype to represent Library_Built in a janno file
data JannoLibraryBuilt
DS :: JannoLibraryBuilt
SS :: JannoLibraryBuilt
MixedSSDS :: JannoLibraryBuilt
Other :: JannoLibraryBuilt

-- | A datatype to represent AccessionIDs in a janno file
data AccessionID
INSDCProject :: String -> AccessionID
INSDCStudy :: String -> AccessionID
INSDCBioSample :: String -> AccessionID
INSDCSample :: String -> AccessionID
INSDCExperiment :: String -> AccessionID
INSDCRun :: String -> AccessionID
INSDCAnalysis :: String -> AccessionID
OtherID :: String -> AccessionID
makeAccessionID :: MonadFail m => String -> m AccessionID
writeJannoFile :: FilePath -> JannoRows -> IO ()

-- | A function to load one janno file
readJannoFile :: FilePath -> PoseidonIO JannoRows

-- | A function to create empty janno rows for a set of individuals
createMinimalJanno :: [EigenstratIndEntry] -> JannoRows
jannoHeaderString :: [String]

-- | A datatype to collect additional, unpecified .janno file columns (a
--   hashmap in cassava/Data.Csv)
newtype CsvNamedRecord
CsvNamedRecord :: NamedRecord -> CsvNamedRecord

-- | A data type to represent a janno file
newtype JannoRows
JannoRows :: [JannoRow] -> JannoRows
type JannoStringList = JannoList String
filterLookup :: FromField a => NamedRecord -> ByteString -> Parser a
filterLookupOptional :: FromField a => NamedRecord -> ByteString -> Parser (Maybe a)
getCsvNR :: CsvNamedRecord -> NamedRecord
encodingOptions :: EncodeOptions
decodingOptions :: DecodeOptions

-- | A helper functions to replace empty bytestrings values in janno files
--   with explicit "n/a"
explicitNA :: ByteString -> ByteString
removeUselessSuffix :: String -> String
getMaybeJannoList :: Maybe (JannoList a) -> [a]
instance Generics.SOP.Universe.Generic Poseidon.Janno.JannoRow
instance Generics.SOP.Universe.HasDatatypeInfo Poseidon.Janno.JannoRow
instance GHC.Classes.Eq Poseidon.Janno.JannoSex
instance GHC.Generics.Generic Poseidon.Janno.BCADAge
instance GHC.Classes.Ord Poseidon.Janno.BCADAge
instance GHC.Classes.Eq Poseidon.Janno.BCADAge
instance GHC.Enum.Bounded Poseidon.Janno.JannoDateType
instance GHC.Enum.Enum Poseidon.Janno.JannoDateType
instance GHC.Generics.Generic Poseidon.Janno.JannoDateType
instance GHC.Classes.Ord Poseidon.Janno.JannoDateType
instance GHC.Classes.Eq Poseidon.Janno.JannoDateType
instance GHC.Enum.Bounded Poseidon.Janno.JannoCaptureType
instance GHC.Enum.Enum Poseidon.Janno.JannoCaptureType
instance GHC.Generics.Generic Poseidon.Janno.JannoCaptureType
instance GHC.Classes.Ord Poseidon.Janno.JannoCaptureType
instance GHC.Classes.Eq Poseidon.Janno.JannoCaptureType
instance GHC.Enum.Bounded Poseidon.Janno.JannoGenotypePloidy
instance GHC.Enum.Enum Poseidon.Janno.JannoGenotypePloidy
instance GHC.Generics.Generic Poseidon.Janno.JannoGenotypePloidy
instance GHC.Classes.Ord Poseidon.Janno.JannoGenotypePloidy
instance GHC.Classes.Eq Poseidon.Janno.JannoGenotypePloidy
instance GHC.Enum.Bounded Poseidon.Janno.JannoUDG
instance GHC.Enum.Enum Poseidon.Janno.JannoUDG
instance GHC.Generics.Generic Poseidon.Janno.JannoUDG
instance GHC.Classes.Ord Poseidon.Janno.JannoUDG
instance GHC.Classes.Eq Poseidon.Janno.JannoUDG
instance GHC.Enum.Bounded Poseidon.Janno.JannoLibraryBuilt
instance GHC.Enum.Enum Poseidon.Janno.JannoLibraryBuilt
instance GHC.Generics.Generic Poseidon.Janno.JannoLibraryBuilt
instance GHC.Classes.Ord Poseidon.Janno.JannoLibraryBuilt
instance GHC.Classes.Eq Poseidon.Janno.JannoLibraryBuilt
instance GHC.Classes.Ord Poseidon.Janno.JannoCountry
instance GHC.Classes.Eq Poseidon.Janno.JannoCountry
instance GHC.Generics.Generic Poseidon.Janno.Latitude
instance GHC.Classes.Ord Poseidon.Janno.Latitude
instance GHC.Classes.Eq Poseidon.Janno.Latitude
instance GHC.Generics.Generic Poseidon.Janno.Longitude
instance GHC.Classes.Ord Poseidon.Janno.Longitude
instance GHC.Classes.Eq Poseidon.Janno.Longitude
instance GHC.Generics.Generic Poseidon.Janno.Percent
instance GHC.Classes.Ord Poseidon.Janno.Percent
instance GHC.Classes.Eq Poseidon.Janno.Percent
instance GHC.Generics.Generic Poseidon.Janno.JURI
instance GHC.Classes.Ord Poseidon.Janno.JURI
instance GHC.Classes.Eq Poseidon.Janno.JURI
instance GHC.Enum.Bounded Poseidon.Janno.RelationDegree
instance GHC.Enum.Enum Poseidon.Janno.RelationDegree
instance GHC.Generics.Generic Poseidon.Janno.RelationDegree
instance GHC.Classes.Ord Poseidon.Janno.RelationDegree
instance GHC.Classes.Eq Poseidon.Janno.RelationDegree
instance GHC.Generics.Generic Poseidon.Janno.AccessionID
instance GHC.Classes.Ord Poseidon.Janno.AccessionID
instance GHC.Classes.Eq Poseidon.Janno.AccessionID
instance GHC.Show.Show a => GHC.Show.Show (Poseidon.Janno.JannoList a)
instance GHC.Generics.Generic (Poseidon.Janno.JannoList a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Poseidon.Janno.JannoList a)
instance GHC.Classes.Eq a => GHC.Classes.Eq (Poseidon.Janno.JannoList a)
instance GHC.Generics.Generic Poseidon.Janno.CsvNamedRecord
instance GHC.Classes.Eq Poseidon.Janno.CsvNamedRecord
instance GHC.Show.Show Poseidon.Janno.CsvNamedRecord
instance GHC.Generics.Generic Poseidon.Janno.JannoRow
instance GHC.Classes.Eq Poseidon.Janno.JannoRow
instance GHC.Show.Show Poseidon.Janno.JannoRow
instance GHC.Generics.Generic Poseidon.Janno.JannoRows
instance GHC.Classes.Eq Poseidon.Janno.JannoRows
instance GHC.Show.Show Poseidon.Janno.JannoRows
instance GHC.Base.Semigroup Poseidon.Janno.JannoRows
instance GHC.Base.Monoid Poseidon.Janno.JannoRows
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.JannoRows
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.JannoRows
instance Data.Csv.Conversion.DefaultOrdered Poseidon.Janno.JannoRow
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.JannoRow
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.JannoRow
instance Data.Csv.Conversion.FromNamedRecord Poseidon.Janno.JannoRow
instance Data.Csv.Conversion.ToNamedRecord Poseidon.Janno.JannoRow
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.CsvNamedRecord
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.CsvNamedRecord
instance (Data.Csv.Conversion.ToField a, GHC.Show.Show a) => Data.Csv.Conversion.ToField (Poseidon.Janno.JannoList a)
instance Data.Csv.Conversion.FromField a => Data.Csv.Conversion.FromField (Poseidon.Janno.JannoList a)
instance Data.Aeson.Types.ToJSON.ToJSON a => Data.Aeson.Types.ToJSON.ToJSON (Poseidon.Janno.JannoList a)
instance Data.Aeson.Types.FromJSON.FromJSON a => Data.Aeson.Types.FromJSON.FromJSON (Poseidon.Janno.JannoList a)
instance GHC.Show.Show Poseidon.Janno.AccessionID
instance Data.Csv.Conversion.ToField Poseidon.Janno.AccessionID
instance Data.Csv.Conversion.FromField Poseidon.Janno.AccessionID
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.AccessionID
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.AccessionID
instance GHC.Show.Show Poseidon.Janno.RelationDegree
instance Data.Csv.Conversion.ToField Poseidon.Janno.RelationDegree
instance Data.Csv.Conversion.FromField Poseidon.Janno.RelationDegree
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.RelationDegree
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.RelationDegree
instance GHC.Show.Show Poseidon.Janno.JURI
instance Data.Csv.Conversion.ToField Poseidon.Janno.JURI
instance Data.Csv.Conversion.FromField Poseidon.Janno.JURI
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.JURI
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.JURI
instance GHC.Show.Show Poseidon.Janno.Percent
instance Data.Csv.Conversion.ToField Poseidon.Janno.Percent
instance Data.Csv.Conversion.FromField Poseidon.Janno.Percent
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.Percent
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.Percent
instance GHC.Show.Show Poseidon.Janno.Longitude
instance Data.Csv.Conversion.ToField Poseidon.Janno.Longitude
instance Data.Csv.Conversion.FromField Poseidon.Janno.Longitude
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.Longitude
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.Longitude
instance GHC.Show.Show Poseidon.Janno.Latitude
instance Data.Csv.Conversion.ToField Poseidon.Janno.Latitude
instance Data.Csv.Conversion.FromField Poseidon.Janno.Latitude
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.Latitude
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.Latitude
instance GHC.Show.Show Poseidon.Janno.JannoCountry
instance Data.Csv.Conversion.ToField Poseidon.Janno.JannoCountry
instance Data.Csv.Conversion.FromField Poseidon.Janno.JannoCountry
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.JannoCountry
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.JannoCountry
instance GHC.Show.Show Poseidon.Janno.JannoLibraryBuilt
instance Data.Csv.Conversion.ToField Poseidon.Janno.JannoLibraryBuilt
instance Data.Csv.Conversion.FromField Poseidon.Janno.JannoLibraryBuilt
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.JannoLibraryBuilt
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.JannoLibraryBuilt
instance GHC.Show.Show Poseidon.Janno.JannoUDG
instance Data.Csv.Conversion.ToField Poseidon.Janno.JannoUDG
instance Data.Csv.Conversion.FromField Poseidon.Janno.JannoUDG
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.JannoUDG
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.JannoUDG
instance GHC.Show.Show Poseidon.Janno.JannoGenotypePloidy
instance Data.Csv.Conversion.ToField Poseidon.Janno.JannoGenotypePloidy
instance Data.Csv.Conversion.FromField Poseidon.Janno.JannoGenotypePloidy
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.JannoGenotypePloidy
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.JannoGenotypePloidy
instance GHC.Show.Show Poseidon.Janno.JannoCaptureType
instance Data.Csv.Conversion.ToField Poseidon.Janno.JannoCaptureType
instance Data.Csv.Conversion.FromField Poseidon.Janno.JannoCaptureType
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.JannoCaptureType
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.JannoCaptureType
instance GHC.Show.Show Poseidon.Janno.JannoDateType
instance Data.Csv.Conversion.ToField Poseidon.Janno.JannoDateType
instance Data.Csv.Conversion.FromField Poseidon.Janno.JannoDateType
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.JannoDateType
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.JannoDateType
instance GHC.Show.Show Poseidon.Janno.BCADAge
instance Data.Csv.Conversion.ToField Poseidon.Janno.BCADAge
instance Data.Csv.Conversion.FromField Poseidon.Janno.BCADAge
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.BCADAge
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.BCADAge
instance GHC.Show.Show Poseidon.Janno.JannoSex
instance GHC.Classes.Ord Poseidon.Janno.JannoSex
instance Data.Csv.Conversion.ToField Poseidon.Janno.JannoSex
instance Data.Csv.Conversion.FromField Poseidon.Janno.JannoSex
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Janno.JannoSex
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Janno.JannoSex

module Poseidon.SequencingSource

-- | A datatype to represent UDG in a ssf file
data SSFUDG
SSFMinus :: SSFUDG
SSFHalf :: SSFUDG
SSFPlus :: SSFUDG
makeSSFUDG :: MonadFail m => String -> m SSFUDG

-- | A datatype to represent Library_Built in a janno file
data SSFLibraryBuilt
SSFDS :: SSFLibraryBuilt
SSFSS :: SSFLibraryBuilt
makeSSFLibraryBuilt :: MonadFail m => String -> m SSFLibraryBuilt

-- | A data type to represent a seqSourceFile
newtype SeqSourceRows
SeqSourceRows :: [SeqSourceRow] -> SeqSourceRows
[getSeqSourceRowList] :: SeqSourceRows -> [SeqSourceRow]
newtype AccessionIDRun
AccessionIDRun :: AccessionID -> AccessionIDRun
[getRunAccession] :: AccessionIDRun -> AccessionID
makeAccessionIDRun :: MonadFail m => String -> m AccessionIDRun
newtype AccessionIDSample
AccessionIDSample :: AccessionID -> AccessionIDSample
[getSampleAccession] :: AccessionIDSample -> AccessionID
makeAccessionIDSample :: MonadFail m => String -> m AccessionIDSample
newtype AccessionIDStudy
AccessionIDStudy :: AccessionID -> AccessionIDStudy
[getStudyAccession] :: AccessionIDStudy -> AccessionID
makeAccessionIDStudy :: MonadFail m => String -> m AccessionIDStudy

-- | A datatype for calendar dates
newtype SimpleDate
SimpleDate :: Day -> SimpleDate
makeSimpleDate :: MonadFail m => String -> m SimpleDate

-- | A datatype to represent MD5 hashes
newtype MD5
MD5 :: String -> MD5
makeMD5 :: MonadFail m => String -> m MD5
isMD5Hash :: String -> Bool

-- | A data type to represent a row in the seqSourceFile See
--   <a>https://github.com/poseidon-framework/poseidon2-schema/blob/master/seqSourceFile_columns.tsv</a>
--   for more details
data SeqSourceRow
SeqSourceRow :: Maybe JannoStringList -> Maybe SSFUDG -> Maybe SSFLibraryBuilt -> Maybe AccessionIDSample -> Maybe AccessionIDStudy -> Maybe AccessionIDRun -> Maybe String -> Maybe String -> Maybe SimpleDate -> Maybe SimpleDate -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe (JannoList JURI) -> Maybe (JannoList JURI) -> Maybe (JannoList Integer) -> Maybe (JannoList MD5) -> Maybe Integer -> Maybe (JannoList JURI) -> CsvNamedRecord -> SeqSourceRow
[sPoseidonID] :: SeqSourceRow -> Maybe JannoStringList
[sUDG] :: SeqSourceRow -> Maybe SSFUDG
[sLibraryBuilt] :: SeqSourceRow -> Maybe SSFLibraryBuilt
[sSampleAccession] :: SeqSourceRow -> Maybe AccessionIDSample
[sStudyAccession] :: SeqSourceRow -> Maybe AccessionIDStudy
[sRunAccession] :: SeqSourceRow -> Maybe AccessionIDRun
[sSampleAlias] :: SeqSourceRow -> Maybe String
[sSecondarySampleAccession] :: SeqSourceRow -> Maybe String
[sFirstPublic] :: SeqSourceRow -> Maybe SimpleDate
[sLastUpdated] :: SeqSourceRow -> Maybe SimpleDate
[sInstrumentModel] :: SeqSourceRow -> Maybe String
[sLibraryLayout] :: SeqSourceRow -> Maybe String
[sLibrarySource] :: SeqSourceRow -> Maybe String
[sInstrumentPlatform] :: SeqSourceRow -> Maybe String
[sLibraryName] :: SeqSourceRow -> Maybe String
[sLibraryStrategy] :: SeqSourceRow -> Maybe String
[sFastqFTP] :: SeqSourceRow -> Maybe (JannoList JURI)
[sFastqASPERA] :: SeqSourceRow -> Maybe (JannoList JURI)
[sFastqBytes] :: SeqSourceRow -> Maybe (JannoList Integer)
[sFastqMD5] :: SeqSourceRow -> Maybe (JannoList MD5)
[sReadCount] :: SeqSourceRow -> Maybe Integer
[sSubmittedFTP] :: SeqSourceRow -> Maybe (JannoList JURI)
[sAdditionalColumns] :: SeqSourceRow -> CsvNamedRecord
seqSourceHeader :: [ByteString]
seqSourceHeaderString :: [String]
seqSourceRefHashMap :: HashMap ByteString ()

-- | A function to write one seqSourceFile
writeSeqSourceFile :: FilePath -> SeqSourceRows -> IO ()

-- | A function to read one seqSourceFile
readSeqSourceFile :: FilePath -> PoseidonIO SeqSourceRows

-- | A function to read one row of a seqSourceFile
readSeqSourceFileRow :: FilePath -> (Int, ByteString) -> PoseidonIO (Either PoseidonException SeqSourceRow)
checkSeqSourceConsistency :: FilePath -> SeqSourceRows -> Either PoseidonException SeqSourceRows
checkSeqSourceRowConsistency :: FilePath -> Int -> SeqSourceRow -> Either PoseidonException SeqSourceRow
warnSeqSourceConsistency :: FilePath -> SeqSourceRows -> PoseidonIO ()
checkRunsUnique :: SeqSourceRows -> Bool
checkAtLeastOnePoseidonID :: SeqSourceRows -> Bool
instance GHC.Enum.Bounded Poseidon.SequencingSource.SSFUDG
instance GHC.Enum.Enum Poseidon.SequencingSource.SSFUDG
instance GHC.Generics.Generic Poseidon.SequencingSource.SSFUDG
instance GHC.Classes.Ord Poseidon.SequencingSource.SSFUDG
instance GHC.Classes.Eq Poseidon.SequencingSource.SSFUDG
instance GHC.Enum.Bounded Poseidon.SequencingSource.SSFLibraryBuilt
instance GHC.Enum.Enum Poseidon.SequencingSource.SSFLibraryBuilt
instance GHC.Generics.Generic Poseidon.SequencingSource.SSFLibraryBuilt
instance GHC.Classes.Ord Poseidon.SequencingSource.SSFLibraryBuilt
instance GHC.Classes.Eq Poseidon.SequencingSource.SSFLibraryBuilt
instance GHC.Generics.Generic Poseidon.SequencingSource.AccessionIDRun
instance GHC.Classes.Eq Poseidon.SequencingSource.AccessionIDRun
instance GHC.Generics.Generic Poseidon.SequencingSource.AccessionIDSample
instance GHC.Classes.Eq Poseidon.SequencingSource.AccessionIDSample
instance GHC.Generics.Generic Poseidon.SequencingSource.AccessionIDStudy
instance GHC.Classes.Eq Poseidon.SequencingSource.AccessionIDStudy
instance GHC.Generics.Generic Poseidon.SequencingSource.SimpleDate
instance GHC.Classes.Ord Poseidon.SequencingSource.SimpleDate
instance GHC.Classes.Eq Poseidon.SequencingSource.SimpleDate
instance GHC.Generics.Generic Poseidon.SequencingSource.MD5
instance GHC.Classes.Ord Poseidon.SequencingSource.MD5
instance GHC.Classes.Eq Poseidon.SequencingSource.MD5
instance GHC.Generics.Generic Poseidon.SequencingSource.SeqSourceRow
instance GHC.Classes.Eq Poseidon.SequencingSource.SeqSourceRow
instance GHC.Show.Show Poseidon.SequencingSource.SeqSourceRow
instance GHC.Generics.Generic Poseidon.SequencingSource.SeqSourceRows
instance GHC.Classes.Eq Poseidon.SequencingSource.SeqSourceRows
instance GHC.Show.Show Poseidon.SequencingSource.SeqSourceRows
instance GHC.Base.Semigroup Poseidon.SequencingSource.SeqSourceRows
instance GHC.Base.Monoid Poseidon.SequencingSource.SeqSourceRows
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SequencingSource.SeqSourceRows
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SequencingSource.SeqSourceRows
instance Data.Csv.Conversion.DefaultOrdered Poseidon.SequencingSource.SeqSourceRow
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SequencingSource.SeqSourceRow
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SequencingSource.SeqSourceRow
instance Data.Csv.Conversion.FromNamedRecord Poseidon.SequencingSource.SeqSourceRow
instance Data.Csv.Conversion.ToNamedRecord Poseidon.SequencingSource.SeqSourceRow
instance GHC.Show.Show Poseidon.SequencingSource.MD5
instance Data.Csv.Conversion.ToField Poseidon.SequencingSource.MD5
instance Data.Csv.Conversion.FromField Poseidon.SequencingSource.MD5
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SequencingSource.MD5
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SequencingSource.MD5
instance GHC.Show.Show Poseidon.SequencingSource.SimpleDate
instance Data.Csv.Conversion.ToField Poseidon.SequencingSource.SimpleDate
instance Data.Csv.Conversion.FromField Poseidon.SequencingSource.SimpleDate
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SequencingSource.SimpleDate
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SequencingSource.SimpleDate
instance GHC.Show.Show Poseidon.SequencingSource.AccessionIDStudy
instance Data.Csv.Conversion.ToField Poseidon.SequencingSource.AccessionIDStudy
instance Data.Csv.Conversion.FromField Poseidon.SequencingSource.AccessionIDStudy
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SequencingSource.AccessionIDStudy
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SequencingSource.AccessionIDStudy
instance GHC.Show.Show Poseidon.SequencingSource.AccessionIDSample
instance Data.Csv.Conversion.ToField Poseidon.SequencingSource.AccessionIDSample
instance Data.Csv.Conversion.FromField Poseidon.SequencingSource.AccessionIDSample
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SequencingSource.AccessionIDSample
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SequencingSource.AccessionIDSample
instance GHC.Show.Show Poseidon.SequencingSource.AccessionIDRun
instance Data.Csv.Conversion.ToField Poseidon.SequencingSource.AccessionIDRun
instance Data.Csv.Conversion.FromField Poseidon.SequencingSource.AccessionIDRun
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SequencingSource.AccessionIDRun
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SequencingSource.AccessionIDRun
instance GHC.Show.Show Poseidon.SequencingSource.SSFLibraryBuilt
instance Data.Csv.Conversion.ToField Poseidon.SequencingSource.SSFLibraryBuilt
instance Data.Csv.Conversion.FromField Poseidon.SequencingSource.SSFLibraryBuilt
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SequencingSource.SSFLibraryBuilt
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SequencingSource.SSFLibraryBuilt
instance GHC.Show.Show Poseidon.SequencingSource.SSFUDG
instance Data.Csv.Conversion.ToField Poseidon.SequencingSource.SSFUDG
instance Data.Csv.Conversion.FromField Poseidon.SequencingSource.SSFUDG
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SequencingSource.SSFUDG
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SequencingSource.SSFUDG

module Poseidon.SecondaryTypes
poseidonVersionParser :: Parser Version

-- | A data type to represent a contributor
data ContributorSpec
ContributorSpec :: String -> String -> Maybe ORCID -> ContributorSpec

-- | the name of a contributor
[contributorName] :: ContributorSpec -> String

-- | the email address of a contributor
[contributorEmail] :: ContributorSpec -> String

-- | the ORCID of a contributor
[contributorORCID] :: ContributorSpec -> Maybe ORCID
contributorSpecParser :: Parser [ContributorSpec]
data IndividualInfo
IndividualInfo :: String -> [String] -> String -> IndividualInfo
[indInfoName] :: IndividualInfo -> String
[indInfoGroups] :: IndividualInfo -> [String]
[indInfoPacName] :: IndividualInfo -> String
data GroupInfo
GroupInfo :: String -> PacNameAndVersion -> Int -> GroupInfo
[gName] :: GroupInfo -> String
[gPackageNames] :: GroupInfo -> PacNameAndVersion
[gNrIndividuals] :: GroupInfo -> Int
data VersionComponent
Major :: VersionComponent
Minor :: VersionComponent
Patch :: VersionComponent
updateThreeComponentVersion :: VersionComponent -> Version -> Version
data PackageInfo
PackageInfo :: String -> Maybe Version -> Version -> Maybe String -> Maybe Day -> Int -> PackageInfo
[pTitle] :: PackageInfo -> String
[pVersion] :: PackageInfo -> Maybe Version
[pPosVersion] :: PackageInfo -> Version
[pDescription] :: PackageInfo -> Maybe String
[pLastModified] :: PackageInfo -> Maybe Day
[pNrIndividuals] :: PackageInfo -> Int

-- | The most general way to run a parser over the Identity monad.
--   <tt>runParser p state filePath input</tt> runs parser <tt>p</tt> on
--   the input list of tokens <tt>input</tt>, obtained from source
--   <tt>filePath</tt> with the initial user state <tt>st</tt>. The
--   <tt>filePath</tt> is only used in error messages and may be the empty
--   string. Returns either a <a>ParseError</a> (<a>Left</a>) or a value of
--   type <tt>a</tt> (<a>Right</a>).
--   
--   <pre>
--   parseFromFile p fname
--     = do{ input &lt;- readFile fname
--         ; return (runParser p () fname input)
--         }
--   </pre>
runParser :: Stream s Identity t => Parsec s u a -> u -> SourceName -> s -> Either ParseError a

-- | A data type to represent an ORCID see
--   <a>https://support.orcid.org/hc/en-us/articles/360006897674-Structure-of-the-ORCID-Identifier</a>
data ORCID
ORCID :: [Char] -> Char -> ORCID
[_orcidNums] :: ORCID -> [Char]
[_orcidChecksum] :: ORCID -> Char
data ServerApiReturnType
ServerApiReturnType :: [String] -> Maybe ApiReturnData -> ServerApiReturnType
[_apiMessages] :: ServerApiReturnType -> [String]
[_apiResponse] :: ServerApiReturnType -> Maybe ApiReturnData
data ApiReturnData
ApiReturnPackageInfo :: [PackageInfo] -> ApiReturnData
ApiReturnGroupInfo :: [GroupInfo] -> ApiReturnData
ApiReturnExtIndividualInfo :: [ExtendedIndividualInfo] -> ApiReturnData
ApiReturnJanno :: [(String, JannoRows)] -> ApiReturnData
data ExtendedIndividualInfo
ExtendedIndividualInfo :: String -> [String] -> String -> Maybe Version -> [(String, Maybe String)] -> ExtendedIndividualInfo
[extIndInfoName] :: ExtendedIndividualInfo -> String
[extIndInfoGroups] :: ExtendedIndividualInfo -> [String]
[extIndInfoPacName] :: ExtendedIndividualInfo -> String
[extIndInfoVersion] :: ExtendedIndividualInfo -> Maybe Version
[extIndInfoAddCols] :: ExtendedIndividualInfo -> [(String, Maybe String)]
processApiResponse :: String -> Bool -> PoseidonIO ApiReturnData
makeNameWithVersion :: HasNameAndVersion a => a -> String
class HasNameAndVersion a
getPacName :: HasNameAndVersion a => a -> String
getPacVersion :: HasNameAndVersion a => a -> Maybe Version
newtype PacNameAndVersion
PacNameAndVersion :: (String, Maybe Version) -> PacNameAndVersion
data ArchiveEndpoint
ArchiveEndpoint :: String -> Maybe String -> ArchiveEndpoint
[_aeServerURL] :: ArchiveEndpoint -> String
[_aeArchiveName] :: ArchiveEndpoint -> Maybe String
qDefault :: Maybe String -> String
qArchive :: Maybe String -> String
instance GHC.Classes.Ord Poseidon.SecondaryTypes.PacNameAndVersion
instance GHC.Classes.Eq Poseidon.SecondaryTypes.PacNameAndVersion
instance GHC.Classes.Eq Poseidon.SecondaryTypes.PackageInfo
instance GHC.Generics.Generic Poseidon.SecondaryTypes.ApiReturnData
instance GHC.Show.Show Poseidon.SecondaryTypes.VersionComponent
instance GHC.Generics.Generic Poseidon.SecondaryTypes.IndividualInfo
instance GHC.Classes.Ord Poseidon.SecondaryTypes.IndividualInfo
instance GHC.Show.Show Poseidon.SecondaryTypes.IndividualInfo
instance GHC.Classes.Eq Poseidon.SecondaryTypes.ORCID
instance GHC.Show.Show Poseidon.SecondaryTypes.ORCID
instance GHC.Classes.Eq Poseidon.SecondaryTypes.ContributorSpec
instance GHC.Show.Show Poseidon.SecondaryTypes.ContributorSpec
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SecondaryTypes.ContributorSpec
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SecondaryTypes.ContributorSpec
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SecondaryTypes.ORCID
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SecondaryTypes.ORCID
instance GHC.Classes.Eq Poseidon.SecondaryTypes.IndividualInfo
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SecondaryTypes.ServerApiReturnType
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SecondaryTypes.ServerApiReturnType
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SecondaryTypes.ApiReturnData
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SecondaryTypes.ApiReturnData
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SecondaryTypes.GroupInfo
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SecondaryTypes.GroupInfo
instance Poseidon.SecondaryTypes.HasNameAndVersion Poseidon.SecondaryTypes.PackageInfo
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SecondaryTypes.PackageInfo
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SecondaryTypes.PackageInfo
instance Poseidon.SecondaryTypes.HasNameAndVersion Poseidon.SecondaryTypes.ExtendedIndividualInfo
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.SecondaryTypes.ExtendedIndividualInfo
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.SecondaryTypes.ExtendedIndividualInfo
instance Poseidon.SecondaryTypes.HasNameAndVersion Poseidon.SecondaryTypes.PacNameAndVersion

module Poseidon.GenotypeData
data GenoDataSource
PacBaseDir :: FilePath -> GenoDataSource
[getPacBaseDirs] :: GenoDataSource -> FilePath
GenoDirect :: GenotypeDataSpec -> GenoDataSource
[getGenoDirect] :: GenoDataSource -> GenotypeDataSpec

-- | A datatype to specify genotype files
data GenotypeDataSpec
GenotypeDataSpec :: GenotypeFormatSpec -> FilePath -> Maybe String -> FilePath -> Maybe String -> FilePath -> Maybe String -> Maybe SNPSetSpec -> GenotypeDataSpec

-- | the genotype format
[format] :: GenotypeDataSpec -> GenotypeFormatSpec

-- | path to the geno file
[genoFile] :: GenotypeDataSpec -> FilePath

-- | the optional checksum for the geno file
[genoFileChkSum] :: GenotypeDataSpec -> Maybe String

-- | path to the snp file
[snpFile] :: GenotypeDataSpec -> FilePath

-- | the optional checksum for the Snp file
[snpFileChkSum] :: GenotypeDataSpec -> Maybe String

-- | path to the ind file
[indFile] :: GenotypeDataSpec -> FilePath

-- | the optional checksum for the indfile
[indFileChkSum] :: GenotypeDataSpec -> Maybe String

-- | the SNP set de facto listed in the genotype data
[snpSet] :: GenotypeDataSpec -> Maybe SNPSetSpec

-- | A data type representing the options fo the genotype format
data GenotypeFormatSpec
GenotypeFormatEigenstrat :: GenotypeFormatSpec
GenotypeFormatPlink :: GenotypeFormatSpec
data SNPSetSpec
SNPSet1240K :: SNPSetSpec
SNPSetHumanOrigins :: SNPSetSpec
SNPSetOther :: SNPSetSpec
snpSetMergeList :: [SNPSetSpec] -> Bool -> SNPSetSpec
snpSetMerge :: SNPSetSpec -> SNPSetSpec -> Bool -> SNPSetSpec

-- | A function to return a list of all individuals in the genotype files
--   of a package.
loadIndividuals :: FilePath -> GenotypeDataSpec -> PoseidonIO [EigenstratIndEntry]

-- | A function to read the genotype data of a package
loadGenotypeData :: MonadSafe m => FilePath -> GenotypeDataSpec -> PlinkPopNameMode -> m ([EigenstratIndEntry], Producer (EigenstratSnpEntry, GenoLine) m ())
joinEntries :: MonadIO m => LogA -> [Int] -> [String] -> [Maybe (EigenstratSnpEntry, GenoLine)] -> m (EigenstratSnpEntry, GenoLine)
getConsensusSnpEntry :: MonadIO m => LogA -> [EigenstratSnpEntry] -> m EigenstratSnpEntry
recodeAlleles :: EigenstratSnpEntry -> EigenstratSnpEntry -> GenoLine -> Either String GenoLine
printSNPCopyProgress :: MonadIO m => LogA -> UTCTime -> Pipe a a m ()
selectIndices :: [Int] -> (EigenstratSnpEntry, GenoLine) -> (EigenstratSnpEntry, GenoLine)
instance GHC.Classes.Eq Poseidon.GenotypeData.GenotypeFormatSpec
instance GHC.Classes.Eq Poseidon.GenotypeData.SNPSetSpec
instance GHC.Classes.Eq Poseidon.GenotypeData.GenotypeDataSpec
instance GHC.Show.Show Poseidon.GenotypeData.GenotypeDataSpec
instance GHC.Show.Show Poseidon.GenotypeData.GenoDataSource
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.GenotypeData.GenotypeDataSpec
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.GenotypeData.GenotypeDataSpec
instance GHC.Show.Show Poseidon.GenotypeData.SNPSetSpec
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.GenotypeData.SNPSetSpec
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.GenotypeData.SNPSetSpec
instance GHC.Show.Show Poseidon.GenotypeData.GenotypeFormatSpec
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.GenotypeData.GenotypeFormatSpec
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.GenotypeData.GenotypeFormatSpec

module Poseidon.BibFile
dummyBibEntry :: BibEntry
readBibTeXFile :: FilePath -> IO BibTeX
writeBibTeXFile :: FilePath -> BibTeX -> IO ()
type BibTeX = [BibEntry]
data BibEntry
BibEntry :: String -> String -> [(String, String)] -> BibEntry
[bibEntryType] :: BibEntry -> String
[bibEntryId] :: BibEntry -> String
[bibEntryFields] :: BibEntry -> [(String, String)]
instance GHC.Show.Show Poseidon.BibFile.BibEntry
instance GHC.Classes.Eq Poseidon.BibFile.BibEntry
instance GHC.Classes.Ord Poseidon.BibFile.BibEntry

module Poseidon.Package

-- | Internal structure for YAML loading only
data PoseidonYamlStruct
PoseidonYamlStruct :: Version -> String -> Maybe String -> [ContributorSpec] -> Maybe Version -> Maybe Day -> GenotypeDataSpec -> Maybe FilePath -> Maybe String -> Maybe FilePath -> Maybe String -> Maybe FilePath -> Maybe String -> Maybe FilePath -> Maybe FilePath -> PoseidonYamlStruct
[_posYamlPoseidonVersion] :: PoseidonYamlStruct -> Version
[_posYamlTitle] :: PoseidonYamlStruct -> String
[_posYamlDescription] :: PoseidonYamlStruct -> Maybe String
[_posYamlContributor] :: PoseidonYamlStruct -> [ContributorSpec]
[_posYamlPackageVersion] :: PoseidonYamlStruct -> Maybe Version
[_posYamlLastModified] :: PoseidonYamlStruct -> Maybe Day
[_posYamlGenotypeData] :: PoseidonYamlStruct -> GenotypeDataSpec
[_posYamlJannoFile] :: PoseidonYamlStruct -> Maybe FilePath
[_posYamlJannoFileChkSum] :: PoseidonYamlStruct -> Maybe String
[_posYamlSeqSourceFile] :: PoseidonYamlStruct -> Maybe FilePath
[_posYamlSeqSourceFileChkSum] :: PoseidonYamlStruct -> Maybe String
[_posYamlBibFile] :: PoseidonYamlStruct -> Maybe FilePath
[_posYamlBibFileChkSum] :: PoseidonYamlStruct -> Maybe String
[_posYamlReadmeFile] :: PoseidonYamlStruct -> Maybe FilePath
[_posYamlChangelogFile] :: PoseidonYamlStruct -> Maybe FilePath

-- | A data type to represent a Poseidon Package
data PoseidonPackage
PoseidonPackage :: FilePath -> Version -> String -> Maybe String -> [ContributorSpec] -> Maybe Version -> Maybe Day -> GenotypeDataSpec -> Maybe FilePath -> JannoRows -> Maybe String -> Maybe FilePath -> SeqSourceRows -> Maybe String -> Maybe FilePath -> BibTeX -> Maybe String -> Maybe FilePath -> Maybe FilePath -> Int -> PoseidonPackage

-- | the base directory of the YAML file
[posPacBaseDir] :: PoseidonPackage -> FilePath

-- | the version of the package
[posPacPoseidonVersion] :: PoseidonPackage -> Version

-- | the title of the package
[posPacTitle] :: PoseidonPackage -> String

-- | the optional description string of the package
[posPacDescription] :: PoseidonPackage -> Maybe String

-- | the contributor(s) of the package
[posPacContributor] :: PoseidonPackage -> [ContributorSpec]

-- | the optional version of the package
[posPacPackageVersion] :: PoseidonPackage -> Maybe Version

-- | the optional date of last update
[posPacLastModified] :: PoseidonPackage -> Maybe Day

-- | the paths to the genotype files
[posPacGenotypeData] :: PoseidonPackage -> GenotypeDataSpec

-- | the path to the janno file
[posPacJannoFile] :: PoseidonPackage -> Maybe FilePath

-- | the loaded janno file
[posPacJanno] :: PoseidonPackage -> JannoRows

-- | the optional jannofile checksum
[posPacJannoFileChkSum] :: PoseidonPackage -> Maybe String

-- | the path to the seqSource file
[posPacSeqSourceFile] :: PoseidonPackage -> Maybe FilePath

-- | the loaded seqSource file
[posPacSeqSource] :: PoseidonPackage -> SeqSourceRows

-- | the optional seqSource file checksum
[posPacSeqSourceFileChkSum] :: PoseidonPackage -> Maybe String

-- | the path to the BibTeX file
[posPacBibFile] :: PoseidonPackage -> Maybe FilePath

-- | the loaded bibliography file
[posPacBib] :: PoseidonPackage -> BibTeX

-- | the optional bibfile chksum
[posPacBibFileChkSum] :: PoseidonPackage -> Maybe String

-- | the path to the README file
[posPacReadmeFile] :: PoseidonPackage -> Maybe FilePath

-- | the path to the CHANGELOG file
[posPacChangelogFile] :: PoseidonPackage -> Maybe FilePath

-- | how many packages of this name exist in the current collection
[posPacDuplicate] :: PoseidonPackage -> Int

-- | A Poseidon Exception data type with several concrete constructors
data PoseidonException

-- | An exception to represent YAML parsing errors
PoseidonYamlParseException :: FilePath -> ParseException -> PoseidonException

-- | An exception to represent a logical error in a package
PoseidonPackageException :: String -> PoseidonException

-- | An exception to represent an issue with a package version
PoseidonPackageVersionException :: FilePath -> String -> PoseidonException

-- | An exception to indicate a missing poseidonVersion field
PoseidonPackageMissingVersionException :: FilePath -> PoseidonException

-- | An exception to represent an error when searching for individuals or
--   populations
PoseidonIndSearchException :: String -> PoseidonException

-- | An exception to represent errors in the genotype data
PoseidonGenotypeException :: String -> PoseidonException

-- | An exception to represent errors in the genotype data forwarded from
--   the sequence-formats library
PoseidonGenotypeExceptionForward :: SomeException -> PoseidonException

-- | An exception to represent errors in the remote data loading forwarded
--   from simpleHttp
PoseidonHttpExceptionForward :: HttpException -> PoseidonException

-- | An exception to represent errors when trying to parse the janno or
--   seqSource file
PoseidonFileRowException :: FilePath -> Int -> String -> PoseidonException

-- | An exception to represent consistency errors in janno or seqSource
--   files
PoseidonFileConsistencyException :: FilePath -> String -> PoseidonException

-- | An exception to represent inconsistencies across multiple files in a
--   package
PoseidonCrossFileConsistencyException :: String -> String -> PoseidonException

-- | An exception to represent logical issues in a poseidon package
--   Collection
PoseidonCollectionException :: String -> PoseidonException

-- | An exception to represent missing files
PoseidonFileExistenceException :: FilePath -> PoseidonException

-- | An exception to represent failed checksum tests
PoseidonFileChecksumException :: FilePath -> PoseidonException

-- | An exception type to represent FStat specification errors
PoseidonFStatsFormatException :: String -> PoseidonException

-- | An exception to represent errors when trying to parse the .bib file
PoseidonBibTeXException :: FilePath -> String -> PoseidonException

-- | An exception to indicate failed entity parsing
PoseidonPoseidonEntityParsingException :: String -> PoseidonException

-- | An exception to indicate issues in the forge selection
PoseidonForgeEntitiesException :: String -> PoseidonException

-- | An exception to throw if there is nothing to be forged
PoseidonEmptyForgeException :: PoseidonException

-- | An exception to indicate an issue in newPackageTemplate
PoseidonNewPackageConstructionException :: String -> PoseidonException

-- | An exception to indicate failed remote info JSON parsing
PoseidonRemoteJSONParsingException :: String -> PoseidonException

-- | A catch-all for any other type of exception
PoseidonGenericException :: String -> PoseidonException

-- | An exception to throw if the output package lacks a name
PoseidonEmptyOutPacNameException :: PoseidonException

-- | An exception to throw if genotype data files don't share a common base
--   directory
PoseidonUnequalBaseDirException :: FilePath -> FilePath -> FilePath -> PoseidonException

-- | An exception to mark server communication errors
PoseidonServerCommunicationException :: String -> PoseidonException

-- | An exception for unzipping issues in fetch
PoseidonUnzipException :: SomeException -> PoseidonException

-- | An exception for issues in chronicle
PoseidonChronicleException :: String -> PoseidonException

-- | An exception for issues with git
PoseidonGitException :: FilePath -> PoseidonException
data PackageReadOptions
PackageReadOptions :: Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> PackageReadOptions

-- | whether to stop on duplicated individuals
[_readOptStopOnDuplicates] :: PackageReadOptions -> Bool

-- | whether to ignore all checksums
[_readOptIgnoreChecksums] :: PackageReadOptions -> Bool

-- | whether to ignore missing genotype files, useful for developer use
--   cases
[_readOptIgnoreGeno] :: PackageReadOptions -> Bool

-- | whether to check the SNPs of the genotypes
[_readOptGenoCheck] :: PackageReadOptions -> Bool

-- | whether to check all SNPs or only the first 100
[_readOptFullGeno] :: PackageReadOptions -> Bool

-- | whether to ignore the Poseidon version of an input package.
[_readOptIgnorePosVersion] :: PackageReadOptions -> Bool

-- | whether to keep multiple versions of the same package (True) or just
--   the latest one (False)
[_readOptKeepMultipleVersions] :: PackageReadOptions -> Bool

-- | A helper function to detect packages with duplicate names and select
--   the most up-to-date ones.
filterDuplicatePackages :: MonadThrow m => Bool -> [PoseidonPackage] -> m [PoseidonPackage]
findAllPoseidonYmlFiles :: FilePath -> IO [FilePath]

-- | a utility function to load all poseidon packages found recursively in
--   multiple base directories. This also takes care of smart filtering and
--   duplication checks. Exceptions lead to skipping packages and
--   outputting warnings
readPoseidonPackageCollection :: PackageReadOptions -> [FilePath] -> PoseidonIO [PoseidonPackage]

-- | A function to read genotype data jointly from multiple packages
getJointGenotypeData :: MonadSafe m => LogA -> Bool -> PlinkPopNameMode -> [PoseidonPackage] -> Maybe FilePath -> m ([EigenstratIndEntry], Producer (EigenstratSnpEntry, GenoLine) m ())
getJointJanno :: [PoseidonPackage] -> JannoRows
getJointIndividualInfo :: [PoseidonPackage] -> [IndividualInfo]

-- | A function to create a minimal POSEIDON package
newMinimalPackageTemplate :: FilePath -> String -> GenotypeDataSpec -> PoseidonPackage

-- | A function to create a more complete POSEIDON package This will take
--   only the filenames of the provided files, so it assumes that the files
--   will be copied into the directory into which the YAML file will be
--   written
newPackageTemplate :: FilePath -> String -> GenotypeDataSpec -> Maybe (Either [EigenstratIndEntry] JannoRows) -> SeqSourceRows -> BibTeX -> PoseidonIO PoseidonPackage
renderMismatch :: [String] -> [String] -> String
zipWithPadding :: a -> b -> [a] -> [b] -> [(a, b)]
writePoseidonPackage :: PoseidonPackage -> IO ()
defaultPackageReadOptions :: PackageReadOptions

-- | A function to read in a poseidon package from a YAML file. Note that
--   this function calls the addFullPaths function to make paths absolute.
readPoseidonPackage :: PackageReadOptions -> FilePath -> PoseidonIO PoseidonPackage
makePseudoPackageFromGenotypeData :: GenotypeDataSpec -> PoseidonIO PoseidonPackage
getJannoRowsFromPac :: PoseidonPackage -> [JannoRow]
dummyContributor :: ContributorSpec
packageToPackageInfo :: PoseidonPackage -> PackageInfo
getAllGroupInfo :: [PoseidonPackage] -> [GroupInfo]
getExtendedIndividualInfo :: [PoseidonPackage] -> [String] -> [ExtendedIndividualInfo]
validateGeno :: PoseidonPackage -> Bool -> PoseidonIO ()
instance GHC.Generics.Generic Poseidon.Package.PoseidonYamlStruct
instance GHC.Classes.Eq Poseidon.Package.PoseidonYamlStruct
instance GHC.Show.Show Poseidon.Package.PoseidonYamlStruct
instance GHC.Generics.Generic Poseidon.Package.PoseidonPackage
instance GHC.Classes.Eq Poseidon.Package.PoseidonPackage
instance GHC.Show.Show Poseidon.Package.PoseidonPackage
instance GHC.Classes.Ord Poseidon.Package.PoseidonPackage
instance Poseidon.SecondaryTypes.HasNameAndVersion Poseidon.Package.PoseidonPackage
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Package.PoseidonYamlStruct
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Package.PoseidonYamlStruct

module Poseidon.EntitiesList

-- | A datatype to represent a package, a group or an individual
data PoseidonEntity
Pac :: String -> PoseidonEntity
Group :: String -> PoseidonEntity
Ind :: PoseidonIndividual -> PoseidonEntity
data SignedEntity
Include :: PoseidonEntity -> SignedEntity
Exclude :: PoseidonEntity -> SignedEntity
type SignedEntitiesList = [SignedEntity]
type EntitiesList = [PoseidonEntity]
class Eq a => EntitySpec a
indInfoConformsToEntitySpec :: EntitySpec a => [a] -> IndividualInfo -> SelectionLevel2
underlyingEntity :: EntitySpec a => a -> PoseidonEntity
entitySpecParser :: EntitySpec a => Parser a
readEntitiesFromFile :: EntitySpec a => FilePath -> IO [a]
readEntitiesFromString :: EntitySpec a => String -> Either PoseidonException [a]
findNonExistentEntities :: EntitySpec a => [a] -> [IndividualInfo] -> EntitiesList
indInfoFindRelevantPackageNames :: EntitySpec a => [a] -> [IndividualInfo] -> [String]
filterRelevantPackages :: EntitySpec a => [a] -> [PoseidonPackage] -> [PoseidonPackage]
entitiesListP :: EntitySpec a => Parser [a]
data EntityInput a
EntitiesDirect :: [a] -> EntityInput a
EntitiesFromFile :: FilePath -> EntityInput a
readEntityInputs :: (MonadIO m, EntitySpec a) => [EntityInput a] -> m [a]
getIndName :: PoseidonIndividual -> String
data PoseidonIndividual
SimpleInd :: String -> PoseidonIndividual
SpecificInd :: IndividualInfo -> PoseidonIndividual

-- | Result: fst is a list of unresolved duplicates, snd a simple list of
--   integers for the simple single individuals
resolveEntityIndices :: EntitySpec a => [a] -> [IndividualInfo] -> ([[(Int, IndividualInfo, SelectionLevel2)]], [Int])
data SelectionLevel2
ShouldBeIncluded :: SelectionLevel2
ShouldBeIncludedWithHigherPriority :: SelectionLevel2
ShouldNotBeIncluded :: SelectionLevel2
instance GHC.Classes.Ord Poseidon.EntitiesList.PoseidonIndividual
instance GHC.Classes.Eq Poseidon.EntitiesList.PoseidonIndividual
instance GHC.Classes.Ord Poseidon.EntitiesList.PoseidonEntity
instance GHC.Classes.Eq Poseidon.EntitiesList.PoseidonEntity
instance GHC.Classes.Ord Poseidon.EntitiesList.SignedEntity
instance GHC.Classes.Eq Poseidon.EntitiesList.SignedEntity
instance GHC.Classes.Eq Poseidon.EntitiesList.SelectionLevel2
instance GHC.Show.Show Poseidon.EntitiesList.SelectionLevel2
instance Poseidon.EntitiesList.EntitySpec Poseidon.EntitiesList.SignedEntity
instance Poseidon.EntitiesList.EntitySpec Poseidon.EntitiesList.PoseidonEntity
instance GHC.Show.Show Poseidon.EntitiesList.SignedEntity
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.EntitiesList.SignedEntity
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.EntitiesList.SignedEntity
instance GHC.Show.Show Poseidon.EntitiesList.PoseidonEntity
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.EntitiesList.PoseidonEntity
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.EntitiesList.PoseidonEntity
instance GHC.Show.Show Poseidon.EntitiesList.PoseidonIndividual

module Poseidon.Chronicle
data PoseidonPackageChronicle
PoseidonPackageChronicle :: String -> Maybe String -> Version -> Day -> Set PackageIteration -> PoseidonPackageChronicle
[snapYamlTitle] :: PoseidonPackageChronicle -> String
[snapYamlDescription] :: PoseidonPackageChronicle -> Maybe String
[snapYamlChronicleVersion] :: PoseidonPackageChronicle -> Version
[snapYamlLastModified] :: PoseidonPackageChronicle -> Day
[snapYamlPackages] :: PoseidonPackageChronicle -> Set PackageIteration

-- | A data type to represent a package state
data PackageIteration
PackageIteration :: String -> Version -> String -> FilePath -> PackageIteration

-- | the title of the package
[pacStateTitle] :: PackageIteration -> String

-- | the version of the package
[pacStateVersion] :: PackageIteration -> Version

-- | the hash of a relevant commit where a package can be accessed in this
--   version
[pacStateCommit] :: PackageIteration -> String

-- | the file path where the POSEIDON.yml file is stored
[pacStatePath] :: PackageIteration -> FilePath
updateChronicle :: PoseidonPackageChronicle -> PoseidonPackageChronicle -> PoseidonPackageChronicle
readChronicle :: FilePath -> PoseidonIO PoseidonPackageChronicle
writeChronicle :: FilePath -> PoseidonPackageChronicle -> PoseidonIO ()
makeChronicle :: FilePath -> [PoseidonPackage] -> PoseidonIO PoseidonPackageChronicle
chroniclePackages :: FilePath -> [PoseidonPackage] -> PoseidonIO (Set PackageIteration)
getPackageVersion :: PoseidonPackage -> PoseidonIO Version
getGitCommitHash :: FilePath -> PoseidonIO String
instance GHC.Show.Show Poseidon.Chronicle.PackageIteration
instance GHC.Classes.Eq Poseidon.Chronicle.PoseidonPackageChronicle
instance GHC.Show.Show Poseidon.Chronicle.PoseidonPackageChronicle
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Chronicle.PoseidonPackageChronicle
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Chronicle.PoseidonPackageChronicle
instance GHC.Classes.Eq Poseidon.Chronicle.PackageIteration
instance GHC.Classes.Ord Poseidon.Chronicle.PackageIteration
instance Data.Aeson.Types.FromJSON.FromJSON Poseidon.Chronicle.PackageIteration
instance Data.Aeson.Types.ToJSON.ToJSON Poseidon.Chronicle.PackageIteration
instance Poseidon.SecondaryTypes.HasNameAndVersion Poseidon.Chronicle.PackageIteration

module Poseidon.CLI.Update
runUpdate :: UpdateOptions -> PoseidonIO ()
data UpdateOptions
UpdateOptions :: [FilePath] -> Maybe Version -> Bool -> VersionComponent -> Bool -> Bool -> [ContributorSpec] -> String -> Bool -> UpdateOptions
[_updateBaseDirs] :: UpdateOptions -> [FilePath]
[_updatePoseidonVersion] :: UpdateOptions -> Maybe Version
[_updateIgnorePoseidonVersion] :: UpdateOptions -> Bool
[_updateVersionUpdate] :: UpdateOptions -> VersionComponent
[_updateNoChecksumUpdate] :: UpdateOptions -> Bool
[_updateIgnoreGeno] :: UpdateOptions -> Bool
[_updateNewContributors] :: UpdateOptions -> [ContributorSpec]
[_updateLog] :: UpdateOptions -> String
[_updateForce] :: UpdateOptions -> Bool

module Poseidon.CLI.Timetravel
data TimetravelOptions
TimetravelOptions :: [FilePath] -> FilePath -> FilePath -> TimetravelOptions
[_timetravelBaseDirs] :: TimetravelOptions -> [FilePath]
[_timetravelSourceDir] :: TimetravelOptions -> FilePath
[_timetravelChronicleFile] :: TimetravelOptions -> FilePath
pacReadOpts :: PackageReadOptions
runTimetravel :: TimetravelOptions -> PoseidonIO ()
gitCheckout :: FilePath -> String -> PoseidonIO ()
copyDirectory :: FilePath -> FilePath -> PoseidonIO ()

module Poseidon.CLI.Summarise

-- | A datatype representing command line options for the summarise command
data SummariseOptions
SummariseOptions :: [FilePath] -> Bool -> SummariseOptions
[_summariseBaseDirs] :: SummariseOptions -> [FilePath]
[_summariseRawOutput] :: SummariseOptions -> Bool
pacReadOpts :: PackageReadOptions

-- | The main function running the janno command
runSummarise :: SummariseOptions -> PoseidonIO ()

-- | A function to print meaningful summary information for a list of
--   poseidon samples
summariseJannoRows :: JannoRows -> Bool -> IO ()

-- | A helper function to concat the first N elements of a string list in a
--   nice way
paste :: [String] -> String

-- | A helper function to determine the frequency of objects in a list
--   (similar to the table function in R)
frequency :: Ord a => [a] -> [(a, Int)]
sortTupelsBySndDesc :: (Ord a, Ord b) => (a, b) -> (a, b) -> Ordering

-- | A helper function to print the output of frequency nicely
printFrequency :: Show a => String -> [(a, Int)] -> String

-- | A helper function to print the output of frequency over Maybe values
--   nicely
printFrequencyMaybe :: Show a => String -> [(Maybe a, Int)] -> String

-- | A helper function to unwrap a maybe
maybeShow :: Show a => Maybe a -> String

-- | As printFrequency, but without additional quoting of strings
printFrequencyString :: String -> [(String, Int)] -> String

-- | As printFrequencyMaybe, but without additional quoting of strings
printFrequencyMaybeString :: String -> [(Maybe String, Int)] -> String

-- | As maybeShow, but without additional quoting of strings
maybeShowString :: Maybe String -> String

module Poseidon.CLI.Serve
runServer :: ServeOptions -> MVar () -> PoseidonIO ()
runServerMainThread :: ServeOptions -> PoseidonIO ()
data ServeOptions
ServeOptions :: [(String, FilePath)] -> Maybe FilePath -> Int -> Bool -> Maybe (FilePath, [FilePath], FilePath) -> ServeOptions
[cliArchiveBaseDirs] :: ServeOptions -> [(String, FilePath)]
[cliZipDir] :: ServeOptions -> Maybe FilePath
[cliPort] :: ServeOptions -> Int
[cliIgnoreChecksums] :: ServeOptions -> Bool
[cliCertFiles] :: ServeOptions -> Maybe (FilePath, [FilePath], FilePath)
instance GHC.Show.Show Poseidon.CLI.Serve.ServeOptions

module Poseidon.CLI.List

-- | The main function running the list command
runList :: ListOptions -> PoseidonIO ()

-- | A datatype representing command line options for the list command
data ListOptions
ListOptions :: RepoLocationSpec -> ListEntity -> Bool -> ListOptions

-- | the list of base directories to search for packages
[_listRepoLocation] :: ListOptions -> RepoLocationSpec

-- | what to list
[_listListEntity] :: ListOptions -> ListEntity

-- | whether to output raw TSV instead of a nicely formatted table
[_listRawOutput] :: ListOptions -> Bool

-- | A datatype to represent the options what to list
data ListEntity
ListPackages :: ListEntity
ListGroups :: ListEntity
ListIndividuals :: [String] -> ListEntity
data RepoLocationSpec
RepoLocal :: [FilePath] -> RepoLocationSpec
RepoRemote :: ArchiveEndpoint -> RepoLocationSpec

module Poseidon.CLI.Genoconvert

-- | A datatype representing command line options for the validate command
data GenoconvertOptions
GenoconvertOptions :: [GenoDataSource] -> GenotypeFormatSpec -> Bool -> Maybe FilePath -> Bool -> PlinkPopNameMode -> GenoconvertOptions
[_genoconvertGenoSources] :: GenoconvertOptions -> [GenoDataSource]
[_genoConvertOutFormat] :: GenoconvertOptions -> GenotypeFormatSpec
[_genoConvertOutOnlyGeno] :: GenoconvertOptions -> Bool
[_genoMaybeOutPackagePath] :: GenoconvertOptions -> Maybe FilePath
[_genoconvertRemoveOld] :: GenoconvertOptions -> Bool
[_genoconvertOutPlinkPopMode] :: GenoconvertOptions -> PlinkPopNameMode
pacReadOpts :: PackageReadOptions
runGenoconvert :: GenoconvertOptions -> PoseidonIO ()
convertGenoTo :: GenotypeFormatSpec -> Bool -> Maybe FilePath -> Bool -> PlinkPopNameMode -> PlinkPopNameMode -> PoseidonPackage -> PoseidonIO ()

module Poseidon.CLI.Fetch
data FetchOptions
FetchOptions :: [FilePath] -> [EntityInput PoseidonEntity] -> ArchiveEndpoint -> FetchOptions
[_jaBaseDirs] :: FetchOptions -> [FilePath]
[_entityInput] :: FetchOptions -> [EntityInput PoseidonEntity]
[_archiveEnd] :: FetchOptions -> ArchiveEndpoint
data PackageState
NotLocal :: PackageState
EqualLocalRemote :: PackageState
LaterRemote :: PackageState
LaterLocal :: PackageState
pacReadOpts :: PackageReadOptions

-- | The main function running the Fetch command
runFetch :: FetchOptions -> PoseidonIO ()
readServerIndInfo :: ByteString -> IO [ExtendedIndividualInfo]
readServerPackageInfo :: ByteString -> IO [PackageInfo]
determinePackageState :: [PoseidonPackage] -> PackageInfo -> (PackageState, String, Maybe Version, Maybe Version)
handlePackageByState :: FilePath -> FilePath -> ArchiveEndpoint -> (PackageState, String, Maybe Version, Maybe Version) -> PoseidonIO ()
printV :: Maybe Version -> String
downloadAndUnzipPackage :: FilePath -> FilePath -> ArchiveEndpoint -> PacNameAndVersion -> PoseidonIO ()
unzipPackage :: FilePath -> FilePath -> IO ()
downloadPackage :: FilePath -> ArchiveEndpoint -> String -> PoseidonIO ()
printDownloadProgress :: LogA -> Double -> ConduitT ByteString ByteString (ResourceT IO) ()

module Poseidon.CLI.Chronicle
data ChronicleOptions
ChronicleOptions :: [FilePath] -> ChronOperation -> ChronicleOptions
[_chronicleBaseDirs] :: ChronicleOptions -> [FilePath]
[_chronicleOperation] :: ChronicleOptions -> ChronOperation
data ChronOperation
CreateChron :: FilePath -> ChronOperation
UpdateChron :: FilePath -> ChronOperation
pacReadOpts :: PackageReadOptions
runChronicle :: ChronicleOptions -> PoseidonIO ()

module Poseidon.CLI.Validate

-- | A datatype representing command line options for the validate command
data ValidateOptions
ValidateOptions :: ValidatePlan -> Bool -> ValidateOptions
[_validatePlan] :: ValidateOptions -> ValidatePlan
[_validateNoExitCode] :: ValidateOptions -> Bool
data ValidatePlan
ValPlanBaseDirs :: [FilePath] -> Bool -> Bool -> Bool -> ValidatePlan
[_valPlanBaseDirs] :: ValidatePlan -> [FilePath]
[_valPlanIgnoreGeno] :: ValidatePlan -> Bool
[_valPlanFullGeno] :: ValidatePlan -> Bool
[_valPlanIgnoreDuplicates] :: ValidatePlan -> Bool
ValPlanPoseidonYaml :: FilePath -> ValidatePlan
ValPlanGeno :: GenotypeDataSpec -> ValidatePlan
ValPlanJanno :: FilePath -> ValidatePlan
ValPlanSSF :: FilePath -> ValidatePlan
ValPlanBib :: FilePath -> ValidatePlan
runValidate :: ValidateOptions -> PoseidonIO ()
conclude :: Bool -> Bool -> PoseidonIO ()

module Poseidon.CLI.OptparseApplicativeParsers
parseChronOperation :: Parser ChronOperation
parseTimetravelSourcePath :: Parser FilePath
parseTimetravelChronPath :: Parser FilePath
parseChronOutPath :: Parser FilePath
parseChronUpdatePath :: Parser FilePath
parsePoseidonVersion :: Parser (Maybe Version)
parseLogMode :: Parser LogMode
parseTestMode :: Parser TestMode
data ErrorLength
CharInf :: ErrorLength
CharCount :: Int -> ErrorLength
parseErrorLength :: Parser ErrorLength
parseRemoveOld :: Parser Bool
parseVersionComponent :: Parser VersionComponent
parseNoChecksumUpdate :: Parser Bool
parseContributors :: Parser [ContributorSpec]
parseLog :: Parser String
parseForce :: Parser Bool
parseForgeEntityInputs :: Parser [EntityInput SignedEntity]
parseFetchEntityInputs :: Parser [EntityInput PoseidonEntity]
parseIgnorePoseidonVersion :: Parser Bool
parseForgeEntitiesDirect :: Parser SignedEntitiesList
parseFetchEntitiesDirect :: Parser EntitiesList
parseForgeEntitiesFromFile :: Parser FilePath
parseFetchEntitiesFromFile :: Parser FilePath
parseIntersect :: Parser Bool
parseRemoteDummy :: Parser ()
parseOutGenotypeFormat :: Bool -> Parser GenotypeFormatSpec
parseGenoDataSources :: Parser [GenoDataSource]
parseGenoDataSource :: Parser GenoDataSource
parseRepoLocation :: Parser RepoLocationSpec
parseArchiveEndpoint :: Parser ArchiveEndpoint
parseValidatePlan :: Parser ValidatePlan
parseInPoseidonYamlFile :: Parser FilePath
parseInJannoFile :: Parser FilePath
parseInSSFile :: Parser FilePath
parseInBibFile :: Parser FilePath
parseBasePaths :: Parser [FilePath]
parseBasePath :: Parser FilePath
parseInGenoWithoutSNPSet :: Parser GenotypeDataSpec
parseInGenotypeDataset :: Parser GenotypeDataSpec
type GenoInput = (GenotypeFormatSpec, FilePath, FilePath, FilePath)
parseInGenoOne :: Parser GenoInput
parseInGenoSep :: Parser GenoInput
parseInGenotypeFormat :: Parser GenotypeFormatSpec
parseInGenoFile :: Parser FilePath
parseInSnpFile :: Parser FilePath
parseInIndFile :: Parser FilePath
parseGenotypeSNPSet :: Parser (Maybe SNPSetSpec)
parseOutPackagePath :: Parser FilePath
parseMaybeOutPackagePath :: Parser (Maybe FilePath)
parseMaybeOutPackageName :: Parser (Maybe String)
parseMinimalOutput :: Parser Bool
parseOutOnlyGeno :: Parser Bool
parsePackageWise :: Parser Bool
parseMaybeSnpFile :: Parser (Maybe FilePath)
parseListEntity :: Parser ListEntity
parseRawOutput :: Parser Bool
parseIgnoreGeno :: Parser Bool
parseFullGeno :: Parser Bool
parseNoExitCode :: Parser Bool
parseIgnoreDuplicates :: Parser Bool
parseRemoteURL :: Parser String
parseUpgrade :: Parser Bool
parseInputPlinkPopMode :: Parser PlinkPopNameMode
parseOutputPlinkPopMode :: Parser PlinkPopNameMode
readPlinkPopName :: String -> Either String PlinkPopNameMode
parseMaybeZipDir :: Parser (Maybe FilePath)
parsePort :: Parser Int
parseIgnoreChecksums :: Parser Bool
parseMaybeCertFiles :: Parser (Maybe (FilePath, [FilePath], FilePath))
parseKeyFile :: Parser FilePath
parseChainFile :: Parser FilePath
parseCertFile :: Parser FilePath
parseArchiveBasePaths :: Parser [(String, FilePath)]
parseMaybeArchiveName :: Parser (Maybe String)
instance GHC.Show.Show Poseidon.CLI.OptparseApplicativeParsers.ErrorLength

module Poseidon.CLI.Survey

-- | A datatype representing command line options for the survey command
data SurveyOptions
SurveyOptions :: [FilePath] -> Bool -> SurveyOptions
[_surveyBaseDirs] :: SurveyOptions -> [FilePath]
[_surveyRawOutput] :: SurveyOptions -> Bool
pacReadOpts :: PackageReadOptions

-- | The main function running the janno command
runSurvey :: SurveyOptions -> PoseidonIO ()
renderPackageWithCompleteness :: String -> Bool -> JannoRows -> SeqSourceRows -> BibTeX -> String
renderJannoCompleteness :: JannoRows -> String
class PresenceCountable a
countPresence :: PresenceCountable a => a -> Int
instance Poseidon.CLI.Survey.PresenceCountable (GHC.Maybe.Maybe a)
instance Poseidon.CLI.Survey.PresenceCountable GHC.Base.String
instance Poseidon.CLI.Survey.PresenceCountable Poseidon.Janno.JannoSex
instance Poseidon.CLI.Survey.PresenceCountable Poseidon.Janno.JannoStringList
instance Poseidon.CLI.Survey.PresenceCountable Poseidon.Janno.CsvNamedRecord

module Poseidon.CLI.Init
data InitOptions
InitOptions :: GenotypeDataSpec -> FilePath -> Maybe String -> Bool -> InitOptions
[_initGenoData] :: InitOptions -> GenotypeDataSpec
[_initPacPath] :: InitOptions -> FilePath
[_initPacName] :: InitOptions -> Maybe String
[_initMinimal] :: InitOptions -> Bool
runInit :: InitOptions -> PoseidonIO ()

module Poseidon.CLI.Forge

-- | A datatype representing command line options for the survey command
data ForgeOptions
ForgeOptions :: [GenoDataSource] -> [EntityInput SignedEntity] -> Maybe FilePath -> Bool -> GenotypeFormatSpec -> Bool -> Bool -> FilePath -> Maybe String -> Bool -> PlinkPopNameMode -> ForgeOptions
[_forgeGenoSources] :: ForgeOptions -> [GenoDataSource]
[_forgeEntityInput] :: ForgeOptions -> [EntityInput SignedEntity]
[_forgeSnpFile] :: ForgeOptions -> Maybe FilePath
[_forgeIntersect] :: ForgeOptions -> Bool
[_forgeOutFormat] :: ForgeOptions -> GenotypeFormatSpec
[_forgeOutMinimal] :: ForgeOptions -> Bool
[_forgeOutOnlyGeno] :: ForgeOptions -> Bool
[_forgeOutPacPath] :: ForgeOptions -> FilePath
[_forgeOutPacName] :: ForgeOptions -> Maybe String
[_forgePackageWise] :: ForgeOptions -> Bool
[_forgeOutputPlinkPopMode] :: ForgeOptions -> PlinkPopNameMode
pacReadOpts :: PackageReadOptions

-- | The main function running the forge command
runForge :: ForgeOptions -> PoseidonIO ()
sumNonMissingSNPs :: IOVector Int -> (EigenstratSnpEntry, GenoLine) -> SafeT IO (IOVector Int)
filterSeqSourceRows :: JannoRows -> SeqSourceRows -> SeqSourceRows
filterBibEntries :: JannoRows -> BibTeX -> BibTeX
fillMissingSnpSets :: [PoseidonPackage] -> PoseidonIO [SNPSetSpec]
